{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryker\\\\Desktop\\\\final-year\\\\front\\\\news-builder\\\\src\\\\components\\\\CreatePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { uploadPost } from \"../api/post\";\nimport { useNotification } from \"../context/NotificationProvider\";\nimport PostForm, { defaultPost } from \"./PostForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n\n  const [postInfo, setPostInfo] = useState({ ...defaultPost\n  });\n  const [uploadingPost, setUploadingPost] = useState(false);\n  const navigate = useNavigate();\n  const {\n    updateNotification\n  } = useNotification();\n\n  const loadPostFromLocalStorage = () => {\n    const result = localStorage.getItem(\"blogPost\");\n    if (!result) return;\n    const oldPost = JSON.parse(result);\n    setPostInfo({ ...postInfo,\n      ...oldPost\n    });\n  };\n\n  useEffect(() => {\n    loadPostFromLocalStorage();\n  }, []);\n\n  const handleSubmit = async data => {\n    setUploadingPost(true);\n    const {\n      error,\n      post\n    } = await uploadPost(data);\n    setUploadingPost(false);\n    if (error) return updateNotification(\"error\", error);\n    updateNotification(\"success\", \"Post created successfully!\");\n    navigate(\"/update-post/\" + post.slug);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostForm, {\n    initialPost: postInfo,\n    onSubmit: handleSubmit,\n    busy: uploadingPost,\n    resetAfterSubmit: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePost, \"RFQbbZdvkTcoevmp09yQXmmEuyA=\", false, function () {\n  return [useNavigate, useNotification];\n});\n\n_c = CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/Ryker/Desktop/final-year/front/news-builder/src/components/CreatePost.jsx"],"names":["React","useEffect","useState","useNavigate","uploadPost","useNotification","PostForm","defaultPost","CreatePost","postInfo","setPostInfo","uploadingPost","setUploadingPost","navigate","updateNotification","loadPostFromLocalStorage","result","localStorage","getItem","oldPost","JSON","parse","handleSubmit","data","error","post","slug"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAOC,QAAP,IAAmBC,WAAnB,QAAsC,YAAtC;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAE,GAAGK;AAAL,GAAD,CAAxC;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAyBT,eAAe,EAA9C;;AAEA,QAAMU,wBAAwB,GAAG,MAAM;AACrC,UAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;AACA,QAAI,CAACF,MAAL,EAAa;AAEb,UAAMG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAX,CAAhB;AACAN,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,SAAGU;AAAlB,KAAD,CAAX;AACD,GAND;;AAQAlB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,wBAAwB;AACzB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMO,YAAY,GAAG,MAAOC,IAAP,IAAgB;AAEnCX,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,UAAM;AAAEY,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkB,MAAMrB,UAAU,CAACmB,IAAD,CAAxC;AACAX,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,QAAIY,KAAJ,EAAW,OAAOV,kBAAkB,CAAC,OAAD,EAAUU,KAAV,CAAzB;AACXV,IAAAA,kBAAkB,CAAC,SAAD,EAAY,4BAAZ,CAAlB;AAEAD,IAAAA,QAAQ,CAAC,kBAAkBY,IAAI,CAACC,IAAxB,CAAR;AACD,GATD;;AAWA,sBACE,QAAC,QAAD;AACE,IAAA,WAAW,EAAEjB,QADf;AAEE,IAAA,QAAQ,EAAEa,YAFZ;AAGE,IAAA,IAAI,EAAEX,aAHR;AAIE,IAAA,gBAAgB;AAJlB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtCuBH,U;UAGLL,W,EAEcE,e;;;KALTG,U","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { uploadPost } from \"../api/post\";\r\nimport { useNotification } from \"../context/NotificationProvider\";\r\nimport PostForm, { defaultPost } from \"./PostForm\";\r\n\r\nexport default function CreatePost() {\r\n  const [postInfo, setPostInfo] = useState({ ...defaultPost });\r\n  const [uploadingPost, setUploadingPost] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const { updateNotification } = useNotification();\r\n\r\n  const loadPostFromLocalStorage = () => {\r\n    const result = localStorage.getItem(\"blogPost\");\r\n    if (!result) return;\r\n\r\n    const oldPost = JSON.parse(result);\r\n    setPostInfo({ ...postInfo, ...oldPost });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPostFromLocalStorage();\r\n  }, []);\r\n\r\n  const handleSubmit = async (data) => {\r\n    \r\n    setUploadingPost(true);\r\n    const { error, post } = await uploadPost(data);\r\n    setUploadingPost(false);\r\n    if (error) return updateNotification(\"error\", error);\r\n    updateNotification(\"success\", \"Post created successfully!\");\r\n\r\n    navigate(\"/update-post/\" + post.slug);\r\n  };\r\n\r\n  return (\r\n    <PostForm\r\n      initialPost={postInfo}\r\n      onSubmit={handleSubmit}\r\n      busy={uploadingPost}\r\n      resetAfterSubmit\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}