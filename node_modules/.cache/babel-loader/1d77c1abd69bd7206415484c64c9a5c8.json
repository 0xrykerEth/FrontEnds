{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryker\\\\Desktop\\\\final-year\\\\front\\\\news-builder\\\\src\\\\components\\\\PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { ImEye, ImSpinner11, ImSpinner3 } from \"react-icons/im\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNotification } from \"../context/NotificationProvider\";\nimport MarkdownHint from \"./MarkdownHint\";\nimport DeviceView from \"./DeviceView\";\nimport { uploadImage } from \"../api/post\";\nimport PostTitleInput from \"./PostTitleInput\";\nimport ImageUploadButton from \"./ImageUploadButton\";\nimport CopyToClip from \"./CopyToClip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const defaultPost = {\n  title: \"\",\n  content: \"\",\n  thumbnail: \"\",\n  meta: \"\",\n  tags: \"\",\n  featured: false\n};\n\nfunction PostForm(_ref) {\n  _s();\n\n  let {\n    formTitle = \"Create New Post\",\n    busy,\n    initialPost,\n    postBtnTitle = \"Post\",\n    resetAfterSubmit,\n    onSubmit\n  } = _ref;\n  const [imageUploading, setImageUploading] = useState(false);\n  const [showMarkdownHint, setShowMarkdownHint] = useState(false);\n  const [postInfo, setPostInfo] = useState({ ...defaultPost\n  });\n  const [selectedThumbURL, setSelectedThumbURL] = useState(\"\");\n  const [viewPost, setViewPost] = useState(false);\n  const [imageLinkToCopy, setImageLinkToCopy] = useState(\"\");\n  const {\n    updateNotification\n  } = useNotification();\n  useEffect(() => {\n    if (initialPost) {\n      setPostInfo(initialPost);\n      setSelectedThumbURL(initialPost.thumbnail || \"\");\n    }\n\n    return () => {\n      if (resetAfterSubmit) resetForm();\n    };\n  }, [initialPost]);\n\n  const handleImageUpoad = async _ref2 => {\n    let {\n      target\n    } = _ref2;\n    if (imageUploading) return;\n    const imageFile = target.files[0];\n    if (!imageFile) return;\n    if (!imageFile.type.includes(\"image\")) return updateNotification(\"error\", \"Invalid image file!\");\n    setImageUploading(true);\n    const formData = new FormData();\n    formData.append(\"image\", imageFile);\n    const {\n      error,\n      image\n    } = await uploadImage(formData);\n    setImageUploading(false);\n    if (error) return updateNotification(\"error\", error.message || error);\n    setImageLinkToCopy(image);\n  };\n\n  const handleChange = _ref3 => {\n    let {\n      target\n    } = _ref3;\n    const {\n      value,\n      name,\n      checked\n    } = target; // if the changed property is file then updating the ui (displaying selected image).\n\n    if (name === \"thumbnail\") {\n      var _file$type;\n\n      const file = target.files[0];\n      if (!((_file$type = file.type) !== null && _file$type !== void 0 && _file$type.includes(\"image\"))) return updateNotification(\"error\", \"Invalid image file\");\n      setPostInfo({ ...postInfo,\n        thumbnail: file\n      });\n      return setSelectedThumbURL(URL.createObjectURL(file));\n    }\n\n    if (name === \"featured\") {\n      return setPostInfo({ ...postInfo,\n        featured: checked\n      });\n    }\n\n    if (name === \"tags\") {\n      const newTags = postInfo.tags.split(\",\");\n\n      if (newTags.length > 4) {\n        updateNotification(\"warning\", \"Only first 4 tags will be selected.\");\n      }\n    }\n\n    const newPost = { ...postInfo,\n      [name]: value\n    };\n\n    if (name === \"meta\" && value.length > 150) {\n      setPostInfo({ ...postInfo,\n        meta: value.substring(0, 150)\n      });\n    } else {\n      setPostInfo({ ...newPost\n      });\n    }\n\n    localStorage.setItem(\"blogPost\", JSON.stringify(newPost));\n  };\n\n  const handleOnImageLinkCopied = () => {\n    updateNotification(\"success\", \"Image link copied.\");\n  };\n\n  const getTextToCopy = () => `![add description here](${imageLinkToCopy})`;\n  /*\r\n  =============== \r\n  Submitting post\r\n  ===============\r\n  */\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      title,\n      content,\n      meta,\n      thumbnail,\n      tags,\n      featured\n    } = postInfo;\n    if (!title.trim()) return updateNotification(\"error\", \"Post title is missing!\");\n    if (!content.trim()) return updateNotification(\"error\", \"Post content is missing!\");\n    if (!meta.trim()) return updateNotification(\"error\", \"Post description is missing!\");\n    if (!tags.trim()) return updateNotification(\"error\", \"Post tags are missing!\");\n    const slug = title.toLowerCase().replace(/[^a-zA-Z ]/g, \" \").split(\" \").filter(val => val.trim().toLowerCase()).join(\"-\");\n    const finalTags = tags.split(\",\").map(t => t.trim()).splice(0, 4);\n    const finalPost = {\n      title,\n      content,\n      slug,\n      meta,\n      thumbnail,\n      featured,\n      tags: JSON.stringify(finalTags)\n    };\n    const formData = new FormData();\n\n    for (let key in finalPost) {\n      formData.append(key, finalPost[key]);\n    }\n\n    onSubmit(formData);\n  };\n\n  const resetForm = () => {\n    localStorage.removeItem(\"blogPost\");\n    setPostInfo({ ...defaultPost\n    });\n  };\n\n  const {\n    title,\n    content,\n    meta,\n    tags,\n    featured\n  } = postInfo;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-screen-lg h-screen mx-auto flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-9/12 flex-1 flex flex-col justify-between p-2\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"w-full mt-5 space-y-3 flex-1 flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"font-semibold text-xl\",\n              children: formTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"flex justify-center px-3 h-10 space-x-2 items-center text-blue-500 cursor-pointer rounded hover:bg-blue-500 hover:text-white ring-1 ring-blue-500 transition\",\n                onClick: resetForm,\n                children: [/*#__PURE__*/_jsxDEV(ImSpinner11, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"flex justify-center px-3 h-10 space-x-2 items-center text-blue-500 cursor-pointer rounded hover:bg-blue-500 hover:text-white ring-1 ring-blue-500 transition\",\n                onClick: () => setViewPost(true),\n                children: [/*#__PURE__*/_jsxDEV(ImEye, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-blue-500 text-white w-36 h-10 cursor-pointer rounded hover:bg-transparent hover:text-blue-500 hover:ring-1 border-blue-500 transition\",\n                children: busy ? /*#__PURE__*/_jsxDEV(ImSpinner3, {\n                  className: \"text-2xl animate-spin mx-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this) : postBtnTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              name: \"featured\",\n              type: \"checkbox\",\n              hidden: true,\n              id: \"featured\",\n              value: featured\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"group flex items-center cursor-pointer hover:\",\n              htmlFor: \"featured\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-4 w-4 rounded-full border-2 border-gray-700 flex items-center justify-center mr-1 select-none group-hover:border-blue-500\",\n                children: featured && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-2 w-2 rounded-full bg-gray-700 group-hover:bg-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-700 group-hover:text-blue-500\",\n                children: \"Featured\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PostTitleInput, {\n            value: title,\n            name: \"title\",\n            onChange: handleChange,\n            onFocus: () => setShowMarkdownHint(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(ImageUploadButton, {\n              onChange: handleImageUpoad,\n              busy: imageUploading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), imageLinkToCopy ? /*#__PURE__*/_jsxDEV(CopyToClip, {\n              valueToCopy: getTextToCopy(),\n              value: imageLinkToCopy,\n              onCopied: handleOnImageLinkCopied\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: handleChange,\n            value: content,\n            name: \"content\",\n            onFocus: () => setShowMarkdownHint(true),\n            placeholder: \"## You can write your here...\",\n            className: \"focus:ring-1 ring-blue-500 transition w-full resize-none border rounded-md outline-none p-2 text-lg flex-1 tracking-wide font-mono text-gray-700\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"pb-2 text-gray-500\",\n              htmlFor: \"meta\",\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: tags,\n              onChange: handleChange,\n              className: \"focus:ring-1 ring-blue-500 transition w-full border rounded-md outline-none p-2\",\n              name: \"tags\",\n              placeholder: \"Add tags with comma: React, React Native\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"pb-2 text-gray-500\",\n              htmlFor: \"meta\",\n              children: [\"Meta description \", meta.length, \" / 150\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: handleChange,\n              value: meta,\n              name: \"meta\",\n              placeholder: \"Write down little bit of post...\",\n              className: \"focus:ring-1 ring-blue-500 transition w-full h-28 resize-none border rounded-md outline-none p-2 text-lg tracking-wide font-mono text-gray-700\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/4 p-2 sticky top-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl text-gray-500 font-semibold mb-2\",\n          children: \"Thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            name: \"thumbnail\",\n            id: \"thumbnail\",\n            type: \"file\",\n            hidden: true,\n            accept: \"image/jpg, image/jpeg, image/png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"thumbnail\",\n            className: \"cursor-pointer\",\n            children: selectedThumbURL ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"aspect-video rounded shadow-md\",\n              src: selectedThumbURL,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aspect-video border border-dashed rounded flex flex-col justify-center items-center text-gray-500 text-center\",\n              children: [\"Select Thumbnail\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"block text-xs\",\n                children: [\"Recommended size \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 38\n                }, this), \" 1280 * 720\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-1/2 -translate-y-1/2\",\n          children: showMarkdownHint ? /*#__PURE__*/_jsxDEV(MarkdownHint, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 33\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeviceView, {\n      title: title,\n      content: content,\n      thumbnail: selectedThumbURL,\n      onClose: () => setViewPost(false),\n      visible: viewPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostForm, \"7eRZwCScENW+HjFm0pKUUJD3Rzs=\", false, function () {\n  return [useNotification];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/Ryker/Desktop/final-year/front/news-builder/src/components/PostForm.jsx"],"names":["ImEye","ImSpinner11","ImSpinner3","React","useEffect","useState","useNotification","MarkdownHint","DeviceView","uploadImage","PostTitleInput","ImageUploadButton","CopyToClip","defaultPost","title","content","thumbnail","meta","tags","featured","PostForm","formTitle","busy","initialPost","postBtnTitle","resetAfterSubmit","onSubmit","imageUploading","setImageUploading","showMarkdownHint","setShowMarkdownHint","postInfo","setPostInfo","selectedThumbURL","setSelectedThumbURL","viewPost","setViewPost","imageLinkToCopy","setImageLinkToCopy","updateNotification","resetForm","handleImageUpoad","target","imageFile","files","type","includes","formData","FormData","append","error","image","message","handleChange","value","name","checked","file","URL","createObjectURL","newTags","split","length","newPost","substring","localStorage","setItem","JSON","stringify","handleOnImageLinkCopied","getTextToCopy","handleSubmit","e","preventDefault","trim","slug","toLowerCase","replace","filter","val","join","finalTags","map","t","splice","finalPost","key","removeItem"],"mappings":"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","sourcesContent":["import { ImEye, ImSpinner11, ImSpinner3 } from \"react-icons/im\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNotification } from \"../context/NotificationProvider\";\r\nimport MarkdownHint from \"./MarkdownHint\";\r\nimport DeviceView from \"./DeviceView\";\r\nimport { uploadImage } from \"../api/post\";\r\nimport PostTitleInput from \"./PostTitleInput\";\r\nimport ImageUploadButton from \"./ImageUploadButton\";\r\nimport CopyToClip from \"./CopyToClip\";\r\n\r\nexport const defaultPost = {\r\n  title: \"\",\r\n  content: \"\",\r\n  thumbnail: \"\",\r\n  meta: \"\",\r\n  tags: \"\",\r\n  featured: false,\r\n};\r\n\r\nfunction PostForm({\r\n  formTitle = \"Create New Post\",\r\n  busy,\r\n  initialPost,\r\n  postBtnTitle = \"Post\",\r\n  resetAfterSubmit,\r\n  onSubmit,\r\n}) {\r\n  const [imageUploading, setImageUploading] = useState(false);\r\n  const [showMarkdownHint, setShowMarkdownHint] = useState(false);\r\n  const [postInfo, setPostInfo] = useState({ ...defaultPost });\r\n  const [selectedThumbURL, setSelectedThumbURL] = useState(\"\");\r\n  const [viewPost, setViewPost] = useState(false);\r\n  const [imageLinkToCopy, setImageLinkToCopy] = useState(\"\");\r\n\r\n  const { updateNotification } = useNotification();\r\n\r\n  useEffect(() => {\r\n    if (initialPost) {\r\n      setPostInfo(initialPost);\r\n      setSelectedThumbURL(initialPost.thumbnail || \"\");\r\n    }\r\n\r\n    return () => {\r\n      if (resetAfterSubmit) resetForm();\r\n    };\r\n  }, [initialPost]);\r\n\r\n  const handleImageUpoad = async ({ target }) => {\r\n    if (imageUploading) return;\r\n    const imageFile = target.files[0];\r\n    if (!imageFile) return;\r\n\r\n    if (!imageFile.type.includes(\"image\"))\r\n      return updateNotification(\"error\", \"Invalid image file!\");\r\n\r\n    setImageUploading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", imageFile);\r\n\r\n    const { error, image } = await uploadImage(formData);\r\n    setImageUploading(false);\r\n\r\n    if (error) return updateNotification(\"error\", error.message || error);\r\n\r\n    setImageLinkToCopy(image);\r\n  };\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { value, name, checked } = target;\r\n\r\n    // if the changed property is file then updating the ui (displaying selected image).\r\n    if (name === \"thumbnail\") {\r\n      const file = target.files[0];\r\n      if (!file.type?.includes(\"image\"))\r\n        return updateNotification(\"error\", \"Invalid image file\");\r\n      setPostInfo({ ...postInfo, thumbnail: file });\r\n      return setSelectedThumbURL(URL.createObjectURL(file));\r\n    }\r\n\r\n    if (name === \"featured\") {\r\n      return setPostInfo({ ...postInfo, featured: checked });\r\n    }\r\n\r\n    if (name === \"tags\") {\r\n      const newTags = postInfo.tags.split(\",\");\r\n      if (newTags.length > 4) {\r\n        updateNotification(\"warning\", \"Only first 4 tags will be selected.\");\r\n      }\r\n    }\r\n\r\n    const newPost = { ...postInfo, [name]: value };\r\n\r\n    if (name === \"meta\" && value.length > 150) {\r\n      setPostInfo({ ...postInfo, meta: value.substring(0, 150) });\r\n    } else {\r\n      setPostInfo({ ...newPost });\r\n    }\r\n\r\n    localStorage.setItem(\"blogPost\", JSON.stringify(newPost));\r\n  };\r\n\r\n  const handleOnImageLinkCopied = () => {\r\n    updateNotification(\"success\", \"Image link copied.\");\r\n  };\r\n\r\n  const getTextToCopy = () => `![add description here](${imageLinkToCopy})`;\r\n\r\n  /*\r\n  =============== \r\n  Submitting post\r\n  ===============\r\n  */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { title, content, meta, thumbnail, tags, featured } = postInfo;\r\n\r\n    if (!title.trim())\r\n      return updateNotification(\"error\", \"Post title is missing!\");\r\n\r\n    if (!content.trim())\r\n      return updateNotification(\"error\", \"Post content is missing!\");\r\n\r\n    if (!meta.trim())\r\n      return updateNotification(\"error\", \"Post description is missing!\");\r\n\r\n    if (!tags.trim())\r\n      return updateNotification(\"error\", \"Post tags are missing!\");\r\n\r\n    const slug = title\r\n      .toLowerCase()\r\n      .replace(/[^a-zA-Z ]/g, \" \")\r\n      .split(\" \")\r\n      .filter((val) => val.trim().toLowerCase())\r\n      .join(\"-\");\r\n\r\n    const finalTags = tags\r\n      .split(\",\")\r\n      .map((t) => t.trim())\r\n      .splice(0, 4);\r\n\r\n    const finalPost = {\r\n      title,\r\n      content,\r\n      slug,\r\n      meta,\r\n      thumbnail,\r\n      featured,\r\n      tags: JSON.stringify(finalTags),\r\n    };\r\n    const formData = new FormData();\r\n    for (let key in finalPost) {\r\n      formData.append(key, finalPost[key]);\r\n    }\r\n\r\n    onSubmit(formData);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    localStorage.removeItem(\"blogPost\");\r\n    setPostInfo({ ...defaultPost });\r\n  };\r\n\r\n  const { title, content, meta, tags, featured } = postInfo;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"max-w-screen-lg h-screen mx-auto flex\">\r\n        <div className=\"w-9/12 flex-1 flex flex-col justify-between p-2\">\r\n          <form\r\n            onSubmit={handleSubmit}\r\n            className=\"w-full mt-5 space-y-3 flex-1 flex flex-col\"\r\n          >\r\n            <div className=\"flex justify-between items-center\">\r\n              <h1 className=\"font-semibold text-xl\">{formTitle}</h1>\r\n              <div className=\"flex items-center space-x-5\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"flex justify-center px-3 h-10 space-x-2 items-center text-blue-500 cursor-pointer rounded hover:bg-blue-500 hover:text-white ring-1 ring-blue-500 transition\"\r\n                  onClick={resetForm}\r\n                >\r\n                  <ImSpinner11 />\r\n                  <span>Reset</span>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"flex justify-center px-3 h-10 space-x-2 items-center text-blue-500 cursor-pointer rounded hover:bg-blue-500 hover:text-white ring-1 ring-blue-500 transition\"\r\n                  onClick={() => setViewPost(true)}\r\n                >\r\n                  <ImEye />\r\n                  <span>View</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"bg-blue-500 text-white w-36 h-10 cursor-pointer rounded hover:bg-transparent hover:text-blue-500 hover:ring-1 border-blue-500 transition\"\r\n                >\r\n                  {busy ? (\r\n                    <ImSpinner3 className=\"text-2xl animate-spin mx-auto\" />\r\n                  ) : (\r\n                    postBtnTitle\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <input\r\n                onChange={handleChange}\r\n                name=\"featured\"\r\n                type=\"checkbox\"\r\n                hidden\r\n                id=\"featured\"\r\n                value={featured}\r\n              />\r\n\r\n              <label\r\n                className=\"group flex items-center cursor-pointer hover:\"\r\n                htmlFor=\"featured\"\r\n              >\r\n                <div className=\"h-4 w-4 rounded-full border-2 border-gray-700 flex items-center justify-center mr-1 select-none group-hover:border-blue-500\">\r\n                  {featured && (\r\n                    <div className=\"h-2 w-2 rounded-full bg-gray-700 group-hover:bg-blue-500\" />\r\n                  )}\r\n                </div>\r\n                <span className=\"text-gray-700 group-hover:text-blue-500\">\r\n                  Featured\r\n                </span>\r\n              </label>\r\n            </div>\r\n\r\n            <PostTitleInput\r\n              value={title}\r\n              name=\"title\"\r\n              onChange={handleChange}\r\n              onFocus={() => setShowMarkdownHint(false)}\r\n            />\r\n            <div className=\"flex\">\r\n              <ImageUploadButton\r\n                onChange={handleImageUpoad}\r\n                busy={imageUploading}\r\n              />\r\n\r\n              {imageLinkToCopy ? (\r\n                <CopyToClip\r\n                  valueToCopy={getTextToCopy()}\r\n                  value={imageLinkToCopy}\r\n                  onCopied={handleOnImageLinkCopied}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <textarea\r\n              onChange={handleChange}\r\n              value={content}\r\n              name=\"content\"\r\n              onFocus={() => setShowMarkdownHint(true)}\r\n              placeholder=\"## You can write your here...\"\r\n              className=\"focus:ring-1 ring-blue-500 transition w-full resize-none border rounded-md outline-none p-2 text-lg flex-1 tracking-wide font-mono text-gray-700\"\r\n            ></textarea>\r\n\r\n            {/* for tags */}\r\n            <div>\r\n              <label className=\"pb-2 text-gray-500\" htmlFor=\"meta\">\r\n                Tags\r\n              </label>\r\n              <input\r\n                value={tags}\r\n                onChange={handleChange}\r\n                className=\"focus:ring-1 ring-blue-500 transition w-full border rounded-md outline-none p-2\"\r\n                name=\"tags\"\r\n                placeholder=\"Add tags with comma: React, React Native\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"pb-2 text-gray-500\" htmlFor=\"meta\">\r\n                Meta description {meta.length} / 150\r\n              </label>\r\n              <textarea\r\n                onChange={handleChange}\r\n                value={meta}\r\n                name=\"meta\"\r\n                placeholder=\"Write down little bit of post...\"\r\n                className=\"focus:ring-1 ring-blue-500 transition w-full h-28 resize-none border rounded-md outline-none p-2 text-lg tracking-wide font-mono text-gray-700\"\r\n              ></textarea>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"w-1/4 p-2 sticky top-0\">\r\n          <h1 className=\"text-xl text-gray-500 font-semibold mb-2\">\r\n            Thumbnail\r\n          </h1>\r\n          <div className=\"w-full\">\r\n            <input\r\n              onChange={handleChange}\r\n              name=\"thumbnail\"\r\n              id=\"thumbnail\"\r\n              type=\"file\"\r\n              hidden\r\n              accept=\"image/jpg, image/jpeg, image/png\"\r\n            />\r\n            <label htmlFor=\"thumbnail\" className=\"cursor-pointer\">\r\n              {selectedThumbURL ? (\r\n                <img\r\n                  className=\"aspect-video rounded shadow-md\"\r\n                  src={selectedThumbURL}\r\n                  alt=\"\"\r\n                />\r\n              ) : (\r\n                <div className=\"aspect-video border border-dashed rounded flex flex-col justify-center items-center text-gray-500 text-center\">\r\n                  Select Thumbnail\r\n                  <span className=\"block text-xs\">\r\n                    Recommended size <br /> 1280 * 720\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </label>\r\n          </div>\r\n          <div className=\"absolute top-1/2 -translate-y-1/2\">\r\n            {showMarkdownHint ? <MarkdownHint /> : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <DeviceView\r\n        title={title}\r\n        content={content}\r\n        thumbnail={selectedThumbURL}\r\n        onClose={() => setViewPost(false)}\r\n        visible={viewPost}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}